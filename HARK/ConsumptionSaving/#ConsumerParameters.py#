'''
Specifies examples of the full set of parameters required to solve various
consumption-saving models.  These models can be found in ConsIndShockModel,
ConsAggShockModel, ConsPrefShockModel, and ConsMarkovModel.
'''
from __future__ import division, print_function
from copy import copy
import numpy as np

# -----------------------------------------------------------------------------
# --- Define all of the parameters for the perfect foresight model ------------
# -----------------------------------------------------------------------------

CRRA = 2.0
Rfree = 1.03        # Interest factor on assets
DiscFac = 0.96      # Intertemporal discount factor
LivPrb = [0.98]     # Survival probability
PermGroFac = [1.01] # Permanent income growth factor
BoroCnstArt = None  # Artificial borrowing constraint
MaxKinks = 400      # Maximum number of grid points to allow in cFunc (should be large)
AgentCount = 10000  # Number of agents of this type (only matters for simulation)
aNrmInitMean = 0.0  # Mean of log initial assets (only matters for simulation)
aNrmInitStd = 1.0   # Standard deviation of log initial assets (only for simulation)
pLvlInitMean = 0.0  # Mean of log initial permanent income (only matters for simulation)
pLvlInitStd = 0.0   # Standard deviation of log initial permanent income (only matters for simulation)
PermGroFacAgg = 1.0 # Aggregate permanent income growth factor (only matters for simulation)
T_age = None        # Age after which simulated agents are automatically killed
T_cycle = 1         # Number of periods in the cycle for this agent type

# -----------------------------------------------------------------------------
# --- Define additional parameters for the idiosyncratic shocks model ---------
# -----------------------------------------------------------------------------

# dummy stuff to get things passing before full refactor is complete
init_idiosyncratic_shocks = {
    'Rfree' : 1.03,
    'CubicBool' : False,
    'vFuncBool' : False,
    'PermShkStd': [0.1],    # Standard deviation of log permanent income shocks
    'PermShkCount': 7,      # Number of points in discrete approximation to permanent income shocks
    'TranShkStd': [0.1],    # Standard deviation of log transitory income shocks
    'TranShkCount': 7,      # Number of points in discrete approximation to transitory income shocks
    'UnempPrb': 0.05,       # Probability of unemployment while working
    'UnempPrbRet': 0.005,   # Probability of "unemployment" while retired
    'IncUnemp': 0.3,        # Unemployment benefits replacement rate
    'IncUnempRet': 0.0,     # "Unemployment" benefits when retired
    'BoroCnstArt': 0.0,     # Artificial borrowing constraint; imposed minimum level of end-of period assets
    'tax_rate': 0.0,        # Flat income tax rate
    'T_retire': 0, # Period of retirement (0 --> no retirement)
    # assets above grid parameters
    'aXtraMin': 0.001,      # Minimum end-of-period "assets above minimum" value
    'aXtraMax': 20,         # Maximum end-of-period "assets above minimum" value
    'aXtraNestFac': 3,      # Exponential nesting factor when constructing "assets above minimum" grid
    'aXtraCount': 48,       # Number of points in the grid of "assets above minimum"
    'aXtraExtra': [None],   # Some other value of "assets above minimum" to add to the grid, not used
    # Income process variables
}




# -----------------------------------------------------------------------------
# ----- Define additional parameters for the aggregate shocks model -----------
# -----------------------------------------------------------------------------
# -----------------------------------------------------------------------------
# ----- Define additional parameters for the Markov agg shocks model ----------
# -----------------------------------------------------------------------------

from HARK.ConsumptionSaving.ConsAggShockModel import init_cobb_douglas


# This example makes a high risk, low growth state and a low risk, high growth state
MrkvArray = np.array([[0.90,0.10],[0.04,0.96]])
PermShkAggStd = [0.012,0.006]     # Standard deviation of log aggregate permanent shocks by state
TranShkAggStd = [0.006,0.003]     # Standard deviation of log aggregate transitory shocks by state
PermGroFacAgg = [0.98,1.02]       # Aggregate permanent income growth factor
slope_prev = 1.0
intercept_prev = 0.0



